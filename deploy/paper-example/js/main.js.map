{"version":3,"sources":["../src/paper-example/script/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["/// <reference types=\"paper\" />\n\n// original js code\n// http://paperjs.org/examples/smoothing/\n\npaper.setup('myCanvas');\npaper.view.onFrame = onFrame;\npaper.view.onResize = onResize;\n\nconst tool:paper.Tool = new paper.Tool();\ntool.onMouseMove = onMouseMove;\ntool.onMouseDown = onMouseDown;\n\nlet width:number;\nlet height:number;\nlet center:paper.Point;\n\nlet mousePos:paper.Point = new paper.Point(paper.view.center.x / 2, paper.view.center.y / 2);\nlet pathHeight:number = mousePos.y;\nlet smooth:boolean = true;\n\nconst points:number = 10;\nconst path:paper.Path = new paper.Path();\n\npath.fillColor = 'black';\ninitializePath();\n\nfunction initializePath() {\n\tcenter = paper.view.center;\n\twidth = paper.view.size.width;\n\theight = paper.view.size.height / 2;\n\tpath.segments = [];\n\tpath.add(paper.view.bounds.bottomLeft);\n\tfor (let i:number = 1; i < points; i++) {\n\t\tconst point:paper.Point = new paper.Point(width / points * i, center.y);\n\t\tpath.add(point);\n\t}\n\tpath.add(paper.view.bounds.bottomRight);\n\tpath.fullySelected = true;\n}\n\nfunction onFrame(event:paper.IFrameEvent) {\n\tpathHeight += (center.y - mousePos.y - pathHeight) / 10;\n\tfor (let i:number = 1; i < points; i++) {\n\t\tconst sinSeed:number = event.count + (i + i % 10) * 100;\n\t\tconst sinHeight:number = Math.sin(sinSeed / 200) * pathHeight;\n\t\tconst yPos:number = Math.sin(sinSeed / 100) * sinHeight + height;\n\t\tpath.segments[i].point.y = yPos;\n\t}\n\tif (smooth)\n\t\tpath.smooth({ type: 'continuous' });\n}\n\nfunction onMouseMove(event:paper.ToolEvent) {\n\tmousePos = event.point;\n}\n\nfunction onMouseDown(event:paper.ToolEvent) {\n\tsmooth = !smooth;\n\tif (!smooth) {\n\t\t// If smooth has been turned off, we need to reset\n\t\t// the handles of the path:\n\t\tfor (let i:number = 0, l = path.segments.length; i < l; i++) {\n\t\t\tconst segment:paper.Segment = path.segments[i];\n\t\t\tsegment.handleIn = segment.handleOut = null;\n\t\t}\n\t}\n}\n\n// Reposition the path whenever the window is resized:\nfunction onResize(event:paper.Event) {\n\tinitializePath();\n}"]}